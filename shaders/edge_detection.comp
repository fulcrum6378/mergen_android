#version 450
#extension GL_ARB_separate_shader_objects : enable

#define H 720
#define W 720
#define WORKGROUP_SIZE 18
// maxComputeWorkGroupInvocations in Mali G72 => 384

struct Pixel{
    vec4 value;
};

layout(local_size_x = WORKGROUP_SIZE, local_size_y = WORKGROUP_SIZE, local_size_z = 1) in;
layout(std140, binding = 0) readonly buffer bufI {
    uint arr[H][W];
};
layout(std140, binding = 1) buffer bufO {
    Pixel statuses[H * W];
};

bool compareColours(uint a, uint b) {
    return abs(float(a >> 16) - float(b >> 16)) <= 4.0f &&
        abs(float(int(a >> 8) & 0xFF) - float(int(b >> 8) & 0xFF)) <= 4.0f &&
        abs(float(int(a) & 0xFF) - float(int(b) & 0xFF)) <= 4.0f;
}

void main() {
    uint x = gl_GlobalInvocationID.x, y = gl_GlobalInvocationID.y;
    // in order to fit the work into workgroups, some unnecessary threads are launched.
    // we terminate those threads here.
    if (x >= W || y >= H) return;

    bool b = false,
        nt = y != 0, nb = y != H - 1,
        nl = x != 0, nr = x != W - 1;
    if (nt && compareColours(arr[y][x], arr[y - 1][x])) // top
        b = true;
    if (nt && nr && compareColours(arr[y][x], arr[y - 1][x + 1])) // top-right
        b = true;
    if (nr && compareColours(arr[y][x], arr[y][x + 1])) // right
        b = true;
    if (nb && nr && compareColours(arr[y][x], arr[y + 1][x + 1])) // bottom-right
        b = true;
    if (nb && compareColours(arr[y][x], arr[y + 1][x])) // bottom
        b = true;
    if (nb && nl && compareColours(arr[y][x], arr[y + 1][x - 1])) // bottom-left
        b = true;
    if (nl && compareColours(arr[y][x], arr[y][x - 1])) // left
        b = true;
    if (nt && nl && compareColours(arr[y][x], arr[y - 1][x - 1])) // top-left
        b = true;

    statuses[W * y + x].value = vec4(1.0, 0.0, 0.0, b ? 1.0 : 0.0);
}
