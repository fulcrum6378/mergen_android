#version 450
#extension GL_ARB_separate_shader_objects : enable
//https://registry.khronos.org/OpenGL/extensions/ARB/ARB_separate_shader_objects.txt

#define H 720u
#define W 720u
#define WORKGROUP_SIZE 18u
// maxComputeWorkGroupInvocations in Mali G72 => 384

layout(local_size_x = WORKGROUP_SIZE, local_size_y = WORKGROUP_SIZE, local_size_z = 1u) in;
layout(std140, binding = 0) readonly buffer bufI {
    uint arr[H][W];
};
layout(std140, binding = 1) buffer bufO {
    bool statuses[H][W];
};

bool compareColours(uint a, uint b) {
    return abs(float(a >> 16) - float(b >> 16)) <= 4.0f &&
        abs(float(int(a >> 8) & 0xFF) - float(int(b >> 8) & 0xFF)) <= 4.0f &&
        abs(float(int(a) & 0xFF) - float(int(b) & 0xFF)) <= 4.0f;
}

void main() {
    uint x = gl_GlobalInvocationID.x, y = gl_GlobalInvocationID.y;
    // in order to fit the work into workgroups, some unnecessary threads are launched.
    // we terminate those threads here.
    if (x >= W || y >= H) return;

    bool b = false,
        nt = y != 0, nb = y != H - 1,
        nl = x != 0, nr = x != W - 1;
    if (nt && compareColours(arr[y][x], arr[y - 1][x])) // top
        b = true;
    if (nt && nr && compareColours(arr[y][x], arr[y - 1][x + 1])) // top-right
        b = true;
    if (nr && compareColours(arr[y][x], arr[y][x + 1])) // right
        b = true;
    if (nb && nr && compareColours(arr[y][x], arr[y + 1][x + 1])) // bottom-right
        b = true;
    if (nb && compareColours(arr[y][x], arr[y + 1][x])) // bottom
        b = true;
    if (nb && nl && compareColours(arr[y][x], arr[y + 1][x - 1])) // bottom-left
        b = true;
    if (nl && compareColours(arr[y][x], arr[y][x - 1])) // left
        b = true;
    if (nt && nl && compareColours(arr[y][x], arr[y - 1][x - 1])) // top-left
        b = true;

    //uint index = W * y + x;
    //if (index > 518400u) return; // max 518400
    // b:     errors even on the 0th index, plus tested on the 1000th
    //        W * H * 4                   W * H (-97280)
    // false: 260607u(ok), 260608u(fail)  163327u(ok), 163328u(fail)
    // true:  260167u(ok), 260168u(fail)  162887u(ok), 162888u(fail) -440
    // these numbers decreased when I lowered the buffer size (/=4)
    //statuses[y][x] = statuses[y][x];  // ok in all indices, if "uint", but crashes in "bool"
    //statuses[index] = statuses[index];// ok in all indices, if "uint", but crashes in "bool"
    statuses[y][x] = true; // same results in a 2-dimensional array
    //atomicExchange(statuses[y][x], ret);
}
